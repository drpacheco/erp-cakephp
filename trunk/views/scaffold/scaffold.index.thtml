<?php
/* SVN FILE: $Id: index.thtml 4409 2007-02-02 13:20:59Z phpnut $ */
/**
 *
 * PHP versions 4 and 5
 *
 * CakePHP(tm) :  Rapid Development Framework <http://www.cakephp.org/>
 * Copyright 2005-2007, Cake Software Foundation, Inc.
 *								1785 E. Sahara Avenue, Suite 490-204
 *								Las Vegas, Nevada 89104
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @filesource
 * @copyright		Copyright 2005-2007, Cake Software Foundation, Inc.
 * @link				http://www.cakefoundation.org/projects/info/cakephp CakePHP(tm) Project
 * @package			cake
 * @subpackage		cake.cake.libs.view.templates.scaffolds
 * @since			CakePHP(tm) v 0.10.0.1076
 * @version			$Revision: 4409 $
 * @modifiedby		$LastChangedBy: phpnut $
 * @lastmodified	$Date: 2007-02-02 07:20:59 -0600 (Fri, 02 Feb 2007) $
 * @license			http://www.opensource.org/licenses/mit-license.php The MIT License
 */
?>
<h1>Listando <?php echo Inflector::humanize($this->name)?></h1>
<?php
$model = ucwords(Inflector::singularize($this->name));
$modelKey = $model;
$humanName = Inflector::humanize($this->name);
$humanSingularName = Inflector::singularize( $humanName );
if(is_null($this->plugin)) {
	$path = '/';
} else {
	$path = '/'.$this->plugin.'/';
}
if(!empty($this->controller->{$model}->alias)) {
	foreach ($this->controller->{$model}->alias as $key => $value) {
		$alias[] = $key;
	}
}?>
<table class="inav" cellpadding="0" cellspacing="0">
<thead>
<tr>
<?php
foreach ($fieldNames as $fieldName) {?>
	<th><?php echo $fieldName['prompt'];?></th>
<?php }?>
<th>Ações</th>
</tr>
</thead>
<tbody>
<?php
$iRowIndex = 0;
if(is_array($data)) {
	foreach ($data as $row) {
		if($iRowIndex++ % 2 == 0) {
			echo "<tr>";
		} else {
			echo "<tr class='altRow'>";
		}
		$count = 0;
		foreach($fieldNames as $field=>$value) { ?>
			<td>
<?php
			if(isset($value['foreignKey'])) {
				$otherModelKey = Inflector::underscore($value['modelKey']);
				$otherControllerName = $value['controller'];
				$otherModelObject =& ClassRegistry::getObject( $otherModelKey );
				if(is_object($otherModelObject)) {
					$displayText = $row[$alias[$count]][ $otherModelObject->getDisplayField() ];
				} else {
					$displayText = $row[$alias[$count]][$field];
				}
				echo $html->link( utf8_decode($displayText), $path.Inflector::underscore($otherControllerName)."/view/".$row[$modelKey][$field] );
				$count++;
			} else {
				switch ($this->controller->{$model}->getColumnType($field)) {
					case 'date':
						$data = explode('-', $row[$modelKey][$field]);
						echo $data[2] . '/' . $data[1] . '/' . $data[0];
						break;
					case 'datetime':
						$data = explode('-', substr($row[$modelKey][$field], 0, 10));
						echo $data[2] . '/' . $data[1] . '/' . $data[0] . substr($row[$modelKey][$field], -9);
						break;
					case 'float':
						echo number_format($row[$modelKey][$field], 2, ',', '.');
						break;
					default:  // Include String
						echo utf8_decode($row[$modelKey][$field]);
				}

			}?>
			</td>
<?php } ?>
		<td class="listactions"><?php echo $html->link('Visualizar',$path.$this->viewPath."/view/{$row[$modelKey][$this->controller->{$model}->primaryKey]}/")?>
			<?php echo $html->link('Alterar',$path.$this->viewPath."/edit/{$row[$modelKey][$this->controller->{$model}->primaryKey]}/")?>
			<?php echo $html->link('Excluir',$path.$this->viewPath."/delete/{$row[$modelKey][$this->controller->{$model}->primaryKey]}/", null, 'Você tem certeza que deseja apagar o código '.$row[$modelKey][$this->controller->{$model}->primaryKey].'?')?>
		</td>
		</tr>
<?php
	}
}?>
</tbody>
</table>
<ul class="actions">
	<li><?php echo $html->link('Novo '.$humanSingularName, $path.$this->viewPath.'/add'); ?></li>
</ul>